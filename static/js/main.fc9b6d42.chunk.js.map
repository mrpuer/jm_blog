{"version":3,"sources":["schemas/schemas.js","forms/components/CreateAntField.jsx","forms/components/DisplayRegisterForm.jsx","services/RealworldService.js","errors/actions.js","forms/actions.js","spinner/SpinnerWrapper.jsx","forms/components/RegisterForm.jsx","pages/RegisterPage.jsx","forms/components/DisplayLoginForm.jsx","forms/components/LoginForm.jsx","pages/LoginPage.jsx","services/index.js","services/constants.js","articles/actions.js","propTypes.js","articles/components/IconText.jsx","article/actions.js","article/components/ArticleTags.jsx","article/components/ArticleLikes.jsx","article/components/ArticleDates.jsx","articles/components/ArticlesListItem.jsx","articles/components/ArticlesList.jsx","pages/ArticlesPage.jsx","article/components/ArticleFooter.jsx","article/components/Article.jsx","pages/ArticlePage.jsx","profile/actions.js","profile/components/Profile.jsx","pages/ProfilePage.jsx","forms/components/DisplayAddArticleForm.jsx","forms/components/AddArticleForm.jsx","article/components/AddArticle.jsx","pages/PrivateRoute.jsx","pages/AddArticlePage.jsx","forms/components/EditArticleForm.jsx","article/components/EditArticle.jsx","pages/EditArticlePage.jsx","articles/reducer.js","forms/userReducer.js","article/reducer.js","errors/reducer.js","profile/reducer.js","reducers.js","blocks/MainMenu.jsx","blocks/AppHeader.jsx","blocks/AppFooter.jsx","errors/getErrorMessage.jsx","errors/ServerError.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["loginSchema","yup","shape","email","required","password","registerSchema","matches","passwordRepeat","oneOf","username","min","max","bio","image","url","articleSchema","title","description","body","tagList","of","CreateAntField","AntComponent","field","form","hasFeedback","label","submitCount","type","props","touched","name","submitted","hasError","errors","submittedError","touchedError","Item","help","validateStatus","onBlur","setFieldTouched","onChange","value","target","setFieldValue","AntInput","Input","AntInputPassword","Password","AntTextArea","TextArea","DisplayRegisterForm","data","isSubmitting","className","component","htmlType","disabled","defaultProps","RealworldService","setToken","token","axios","defaults","headers","common","Authorization","clearToken","register","newUser","a","post","user","localStorage","setItem","login","loginData","getUser","get","resp","getArticles","params","favoriteArticle","slug","article","unfavoriteArticle","delete","getArticle","addArticle","newArticle","editArticle","newData","put","deleteArticle","getProfile","profile","baseURL","getItem","this","clearError","createAction","setError","service","userRegisterRequest","userRegisterSuccess","userRegisterFailure","userLoginRequest","userLoginSuccess","userLoginFailure","userLogout","SpinnerWrapper","isActive","children","size","tip","initialValues","RegisterForm","registerHandler","showSpinner","history","useHistory","from","useLocation","state","pathname","validationSchema","onSubmit","values","setSubmitting","then","result","replace","dispatchProps","formData","dispatch","err","connect","isLoading","RegisterPage","isLogged","path","render","to","DisplayLoginForm","loading","LoginForm","loginHandler","mapDispatch","LoginPage","exact","getArticlesRequest","getArticlesSuccess","getArticlesFailure","PropTypes","objectOf","string","arrayOf","undef","createdAt","dateFormat","updatedAt","favorited","bool","favoritesCount","num","following","IconText","text","handler","onClick","style","marginRight","getArticleRequest","getArticleSuccess","getArticleFailure","deleteArticleSuccess","favoriteArticleSuccess","getArticleAction","favoriteArticleAction","isFavorited","message","success","ArticleTags","tags","map","tag","color","key","ArticleLikes","handlerFavoriteArticle","ArticleDates","formatDistanceToNow","Date","addSuffix","actions","extra","Meta","avatar","src","author","POSTS_PER_PAGE","ArticlesList","componentDidMount","getData","pageNumber","queryParams","limit","offset","prevProps","location","articles","itemLayout","pagination","page","pageSize","total","articlesCount","dataSource","Object","keys","all","header","renderItem","item","React","Component","articlesData","ArticlesPage","query","URLSearchParams","search","ArticleFooter","gutter","span","push","currentArticle","Article","match","dashed","dispatchActions","ArticlePage","getProfileRequest","getProfileSuccess","getProfileFailure","Profile","getProfileHandler","currentProfile","bordered","column","ProfilePage","DisplayAddArticleForm","arrayHelpers","length","index","remove","AddArticleForm","addArticleHandler","withRouter","AddArticle","PrivateRoute","rest","AddArticlePage","editArticleHandler","editedArticle","EditArticle","EditArticlePage","handleActions","GET_ARTICLES_REQUEST","GET_ARTICLES_SUCCESS","payload","reduce","acc","GET_ARTICLES_FAILURE","FAVORITE_ARTICLE_SUCCESS","initState","userReducer","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_LOGOUT","GET_ARTICLE_REQUEST","GET_ARTICLE_SUCCESS","GET_ARTICLE_FAILURE","DELETE_ARTICLE_SUCCESS","error","CLEAR_ERROR","SET_ERROR","response","status","GET_PROFILE_REQUEST","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","combineReducers","MainMenu","handleLogout","theme","mode","defaultSelectedKeys","removeItem","Header","Layout","AppHeader","Footer","AppFooter","textAlign","statusesMap","401","content","403","404","422","ServerError","authUser","hideModal","errorMessage","getErrorMessage","visible","onCancel","footer","Content","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc9b6d42.chunk.js","sourcesContent":["import * as yup from 'yup';\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Incorrect email address')\n    .required('Email is required field'),\n  password: yup.string().required('You need type your password'),\n});\n\nexport const registerSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Invalid email address')\n    .required('Email is required field'),\n  password: yup\n    .string()\n    .required('Password is required field')\n    .matches(\n      /^(?=^.{8,40}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z]).*$/,\n      'Password must contains 8-40 latin symbols, one on upper case, and one digit'\n    ),\n  passwordRepeat: yup.string().oneOf([yup.ref('password'), null], 'Password must match'),\n  username: yup\n    .string()\n    .required('Username is required field')\n    .min(3, 'Username must contains more that 3 symbols')\n    .max(50, 'Username must contains less that 50 symbols'),\n  bio: yup.string(),\n  image: yup.string().url('Image URL incorrect'),\n});\n\nexport const articleSchema = yup.object().shape({\n  title: yup.string().required('Your article must contains a title'),\n  description: yup.string().required('Your article must contains a description'),\n  body: yup.string().required('Your article must contains a body'),\n  tagList: yup.array().of(yup.string().min(1, 'Please, type tag name or remove filed')),\n});\n","import React from 'react';\nimport { Input, Form } from 'antd';\n\nconst CreateAntField = AntComponent => ({\n  field,\n  form,\n  hasFeedback,\n  label,\n  submitCount,\n  type,\n  ...props\n}) => {\n  const touched = form.touched[field.name];\n  const submitted = submitCount > 0;\n  const hasError = form.errors[field.name];\n  const submittedError = hasError && submitted;\n  const touchedError = hasError && touched;\n  const onBlur = () => form.setFieldTouched(field.name, true);\n  const onInputChange = ({ target: { value } }) => form.setFieldValue(field.name, value);\n  const onChange = value => form.setFieldValue(field.name, value);\n  return (\n    <Form.Item\n      label={label}\n      hasFeedback={(hasFeedback && submitted) || (hasFeedback && touched)}\n      help={submittedError || touchedError ? hasError : false}\n      validateStatus={submittedError || touchedError ? 'error' : 'success'}\n    >\n      <AntComponent\n        {...field}\n        {...props}\n        onBlur={onBlur}\n        onChange={type ? onInputChange : onChange}\n      />\n    </Form.Item>\n  );\n};\n\nexport const AntInput = CreateAntField(Input);\nexport const AntInputPassword = CreateAntField(Input.Password);\nexport const AntTextArea = CreateAntField(Input.TextArea);\n","import React from 'react';\nimport { Form, Field } from 'formik';\nimport { Button, Form as AntForm } from 'antd';\nimport PropTypes from 'prop-types';\nimport { AntInput, AntInputPassword } from './CreateAntField';\n\nconst DisplayRegisterForm = ({ data }) => {\n  const { submitCount, isSubmitting } = data;\n  return (\n    <Form className=\"form\">\n      <Field\n        name=\"username\"\n        type=\"text\"\n        label=\"Username\"\n        component={AntInput}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <Field\n        name=\"email\"\n        type=\"email\"\n        label=\"Email\"\n        component={AntInput}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <Field\n        name=\"password\"\n        type=\"password\"\n        label=\"Password\"\n        component={AntInputPassword}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <Field\n        name=\"passwordRepeat\"\n        type=\"password\"\n        label=\"Repeat password\"\n        component={AntInputPassword}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <AntForm.Item>\n        <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n          Register\n        </Button>\n      </AntForm.Item>\n    </Form>\n  );\n};\n\nDisplayRegisterForm.propTypes = {\n  data: PropTypes.shape({\n    submitCount: PropTypes.number,\n    isSubmitting: PropTypes.bool,\n  }),\n};\n\nDisplayRegisterForm.defaultProps = {\n  data: {\n    submitCount: 0,\n    isSubmitting: false,\n  },\n};\n\nexport default DisplayRegisterForm;\n","import axios from 'axios';\n\nexport default class RealworldService {\n  constructor(url) {\n    axios.defaults.baseURL = url;\n    axios.defaults.headers.post['Content-Type'] = 'application/json; charset=utf-8';\n    const token = localStorage.getItem('token');\n    if (token) this.setToken(token);\n  }\n\n  setToken = token => {\n    axios.defaults.headers.common.Authorization = `Token ${token}`;\n  };\n\n  clearToken = () => {\n    delete axios.defaults.headers.common.Authorization;\n  };\n\n  register = async newUser => {\n    this.clearToken();\n    const {\n      data: { user },\n    } = await axios.post('/users', { user: newUser });\n    localStorage.setItem('token', user.token);\n    this.setToken(user.token);\n    return user;\n  };\n\n  login = async loginData => {\n    this.clearToken();\n    const {\n      data: { user },\n    } = await axios.post('/users/login', { user: loginData });\n    localStorage.setItem('token', user.token);\n    this.setToken(user.token);\n    return user;\n  };\n\n  getUser = async token => {\n    this.setToken(token);\n    const resp = await axios.get('/user');\n    return resp.data.user;\n  };\n\n  getArticles = async params => {\n    const resp = await axios.get('/articles', { params });\n    return resp.data;\n  };\n\n  favoriteArticle = async slug => {\n    const resp = await axios.post(`/articles/${slug}/favorite`);\n    return resp.data.article;\n  };\n\n  unfavoriteArticle = async slug => {\n    const resp = await axios.delete(`/articles/${slug}/favorite`);\n    return resp.data.article;\n  };\n\n  getArticle = async slug => {\n    const resp = await axios.get(`/articles/${slug}`);\n    return resp.data.article;\n  };\n\n  addArticle = async newArticle => {\n    const resp = await axios.post(`/articles`, { article: newArticle });\n    return resp.data.article;\n  };\n\n  editArticle = async newData => {\n    const resp = await axios.put(`/articles/${newData.slug}`, { article: newData });\n    return resp.data.article;\n  };\n\n  deleteArticle = async slug => axios.delete(`/articles/${slug}`);\n\n  getProfile = async username => {\n    const resp = await axios.get(`/profiles/${username}`);\n    return resp.data.profile;\n  };\n}\n","import { createAction } from 'redux-actions';\n\nexport const clearError = createAction('CLEAR_ERROR');\nexport const setError = createAction('SET_ERROR');\n\nexport const clearErrorAction = () => dispatch => {\n  dispatch(clearError());\n};\n","import { createAction } from 'redux-actions';\nimport { message } from 'antd';\nimport RealworldService from '../services/RealworldService';\nimport { setError } from '../errors/actions';\n\nconst service = new RealworldService();\n\nconst userRegisterRequest = createAction('USER_REGISTER_REQUEST');\nconst userRegisterSuccess = createAction('USER_REGISTER_SUCCESS');\nconst userRegisterFailure = createAction('USER_REGISTER_FAILURE');\n\nconst userLoginRequest = createAction('USER_LOGIN_REQUEST');\nconst userLoginSuccess = createAction('USER_LOGIN_SUCCESS');\nconst userLoginFailure = createAction('USER_LOGIN_FAILURE');\n\nconst userLogout = createAction('USER_LOGOUT');\n\nexport const onRegister = formData => async dispatch => {\n  dispatch(userRegisterRequest());\n  try {\n    const newUser = await service.register(formData);\n    localStorage.setItem('token', newUser.token);\n    dispatch(userRegisterSuccess({ newUser }));\n    return true;\n  } catch (err) {\n    dispatch(setError({ err }));\n    dispatch(userRegisterFailure());\n    return false;\n  }\n};\n\nexport const onLogin = loginData => async dispatch => {\n  dispatch(userLoginRequest());\n  try {\n    const user = await service.login(loginData);\n    localStorage.setItem('token', user.token);\n    dispatch(userLoginSuccess({ user }));\n    return true;\n  } catch (err) {\n    dispatch(setError({ err }));\n    dispatch(userLoginFailure());\n    return false;\n  }\n};\n\nexport const onLogout = () => async dispatch => {\n  localStorage.removeItem('token');\n  dispatch(userLogout());\n  message.success('Logout successful!');\n};\n\nexport const getUser = token => async dispatch => {\n  dispatch(userLoginRequest());\n  try {\n    const user = await service.getUser(token || localStorage.getItem('token'));\n    dispatch(userLoginSuccess({ user }));\n  } catch (err) {\n    service.clearToken();\n    dispatch(userLoginFailure());\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Spin } from 'antd';\n\nconst SpinnerWrapper = ({ isActive, children }) => {\n  return isActive ? (\n    <Spin size=\"large\" tip=\"Please wait...\">\n      {children}\n    </Spin>\n  ) : (\n    <>{children}</>\n  );\n};\n\nSpinnerWrapper.propTypes = {\n  isActive: PropTypes.bool,\n  children: PropTypes.element.isRequired,\n};\n\nSpinnerWrapper.defaultProps = {\n  isActive: false,\n};\n\nexport default SpinnerWrapper;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { registerSchema } from '../../schemas/schemas';\nimport DisplayRegisterForm from './DisplayRegisterForm';\nimport { onRegister } from '../actions';\nimport SpinnerWrapper from '../../spinner/SpinnerWrapper';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  username: '',\n};\n\nconst RegisterForm = ({ registerHandler, showSpinner }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { from } = location.state || { from: { pathname: '/' } };\n  return (\n    <SpinnerWrapper isActive={showSpinner}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={registerSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          registerHandler(values).then(result => {\n            if (result) history.replace(from);\n            setSubmitting(false);\n          });\n        }}\n      >\n        {data => <DisplayRegisterForm data={data} />}\n      </Formik>\n    </SpinnerWrapper>\n  );\n};\n\nRegisterForm.propTypes = {\n  registerHandler: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool,\n};\n\nRegisterForm.defaultProps = {\n  showSpinner: false,\n};\n\nconst mapStateToProps = ({ user: { isLoading } }) => ({\n  showSpinner: isLoading,\n});\n\nconst dispatchProps = {\n  registerHandler: onRegister,\n};\n\nexport default connect(mapStateToProps, dispatchProps)(RegisterForm);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport RegisterForm from '../forms/components/RegisterForm';\n\nconst RegisterPage = ({ isLogged }) => {\n  return (\n    <Route\n      path=\"/register\"\n      render={() => (isLogged ? <Redirect to={{ pathname: '/profile' }} /> : <RegisterForm />)}\n    />\n  );\n};\n\nRegisterPage.propTypes = {\n  isLogged: PropTypes.bool,\n};\n\nRegisterPage.defaultProps = {\n  isLogged: false,\n};\n\nconst mapStateToProps = ({ user }) => ({\n  isLogged: user.isLogged,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n","import React from 'react';\nimport { Form, Field } from 'formik';\nimport { Button, Form as AntForm } from 'antd';\nimport PropTypes from 'prop-types';\nimport { AntInput, AntInputPassword } from './CreateAntField';\n\nconst DisplayLoginForm = ({ data: { submitCount, isSubmitting } }) => {\n  return (\n    <Form className=\"form\">\n      <Field\n        name=\"email\"\n        type=\"email\"\n        label=\"Email\"\n        component={AntInput}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <Field\n        name=\"password\"\n        type=\"password\"\n        label=\"Password\"\n        component={AntInputPassword}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <AntForm.Item>\n        <Button type=\"primary\" htmlType=\"submit\" loading={isSubmitting}>\n          Login\n        </Button>\n      </AntForm.Item>\n    </Form>\n  );\n};\n\nDisplayLoginForm.propTypes = {\n  data: PropTypes.shape({\n    submitCount: PropTypes.number,\n    isSubmitting: PropTypes.bool,\n  }),\n};\n\nDisplayLoginForm.defaultProps = {\n  data: {\n    submitCount: 0,\n    isSubmitting: false,\n  },\n};\n\nexport default DisplayLoginForm;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DisplayLoginForm from './DisplayLoginForm';\nimport { loginSchema } from '../../schemas/schemas';\nimport { onLogin } from '../actions';\nimport SpinnerWrapper from '../../spinner/SpinnerWrapper';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = ({ loginHandler, showSpinner }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { from } = location.state || { from: { pathname: '/' } };\n  return (\n    <SpinnerWrapper isActive={showSpinner}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          loginHandler(values).then(result => {\n            if (result) history.replace(from);\n            setSubmitting(false);\n          });\n        }}\n      >\n        {data => <DisplayLoginForm data={data} />}\n      </Formik>\n    </SpinnerWrapper>\n  );\n};\n\nLoginForm.propTypes = {\n  loginHandler: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool,\n};\n\nLoginForm.defaultProps = {\n  showSpinner: false,\n};\n\nconst mapStateToProps = ({ user: { isLoading } }) => ({\n  showSpinner: isLoading,\n});\n\nconst mapDispatch = {\n  loginHandler: onLogin,\n};\n\nexport default connect(mapStateToProps, mapDispatch)(LoginForm);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoginForm from '../forms/components/LoginForm';\n\nconst LoginPage = ({ isLogged, username }) => {\n  return (\n    <Route\n      path=\"/login\"\n      exact\n      render={() =>\n        isLogged ? <Redirect to={{ pathname: `/profile/${username}` }} /> : <LoginForm />\n      }\n    />\n  );\n};\n\nLoginPage.propTypes = {\n  isLogged: PropTypes.bool,\n  username: PropTypes.string,\n};\n\nLoginPage.defaultProps = {\n  isLogged: false,\n  username: '',\n};\n\nconst mapStateToProps = ({ user }) => ({\n  isLogged: user.isLogged,\n  username: user.username,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import RealworldService from './RealworldService';\nimport { URL } from './constants';\n\nexport default new RealworldService(URL);\n","// eslint-disable-next-line import/prefer-default-export\nexport const URL = 'https://conduit.productionready.io/api/';\n","import { createAction } from 'redux-actions';\nimport service from '../services';\nimport { setError } from '../errors/actions';\n\nexport const getArticlesRequest = createAction('GET_ARTICLES_REQUEST');\nexport const getArticlesSuccess = createAction('GET_ARTICLES_SUCCESS');\nexport const getArticlesFailure = createAction('GET_ARTICLES_FAILURE');\n\nexport const getArticlesAction = params => async dispatch => {\n  dispatch(getArticlesRequest());\n  try {\n    const articlesData = await service.getArticles(params);\n    dispatch(getArticlesSuccess({ articlesData }));\n  } catch (err) {\n    dispatch(getArticlesFailure());\n    dispatch(setError({ err }));\n  }\n};\n","import PropTypes from 'prop-types';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const articleProps = PropTypes.shape({\n  article: PropTypes.objectOf({\n    slug: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    body: PropTypes.string,\n    tagList: PropTypes.arrayOf(PropTypes.string || PropTypes.undef),\n    createdAt: PropTypes.dateFormat,\n    updatedAt: PropTypes.dateFormat,\n    favorited: PropTypes.bool,\n    favoritesCount: PropTypes.num,\n    isLoading: PropTypes.bool,\n  }),\n});\n\nexport const profileProps = PropTypes.shape({\n  username: PropTypes.string,\n  bio: PropTypes.string,\n  image: PropTypes.string,\n  following: PropTypes.bool,\n  isLoading: PropTypes.bool,\n});\n","import React from 'react';\nimport { Icon } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst IconText = ({ type, text, handler }) => (\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n  <span onClick={handler}>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n);\n\nIconText.propTypes = {\n  type: PropTypes.string.isRequired,\n  handler: PropTypes.func,\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nIconText.defaultProps = {\n  text: '',\n  handler: () => {},\n};\n\nexport default IconText;\n","import { createAction } from 'redux-actions';\nimport { message } from 'antd';\nimport service from '../services';\nimport { setError } from '../errors/actions';\n\nconst getArticleRequest = createAction('GET_ARTICLE_REQUEST');\nconst getArticleSuccess = createAction('GET_ARTICLE_SUCCESS');\nconst getArticleFailure = createAction('GET_ARTICLE_FAILURE');\nconst deleteArticleSuccess = createAction('DELETE_ARTICLE_SUCCESS');\nconst favoriteArticleSuccess = createAction('FAVORITE_ARTICLE_SUCCESS');\n\nexport const getArticleAction = slug => async dispatch => {\n  dispatch(getArticleRequest());\n  try {\n    const article = await service.getArticle(slug);\n    dispatch(getArticleSuccess({ article }));\n  } catch (err) {\n    dispatch(getArticleFailure());\n    dispatch(setError({ err }));\n  }\n};\n\nexport const addArticleAction = newArticle => async dispatch => {\n  dispatch(getArticleRequest());\n  try {\n    const article = await service.addArticle(newArticle);\n    dispatch(getArticleSuccess({ article }));\n    message.success('Article Added!');\n    return article;\n  } catch (err) {\n    dispatch(getArticleFailure());\n    dispatch(setError({ err }));\n    return null;\n  }\n};\n\nexport const editArticleAction = newData => async dispatch => {\n  dispatch(getArticleRequest());\n  try {\n    const article = await service.editArticle(newData);\n    dispatch(getArticleSuccess({ article }));\n    message.success('Article Edited!');\n    return article;\n  } catch (err) {\n    dispatch(getArticleFailure());\n    dispatch(setError({ err }));\n    return null;\n  }\n};\n\nexport const favoriteArticleAction = (slug, isFavorited) => async dispatch => {\n  dispatch(getArticleRequest());\n  try {\n    const article = isFavorited\n      ? await service.unfavoriteArticle(slug)\n      : await service.favoriteArticle(slug);\n    dispatch(favoriteArticleSuccess({ article }));\n    dispatch(getArticleSuccess({ article }));\n    message.success(isFavorited ? 'You are unliked it!' : 'You are liked it!');\n  } catch (err) {\n    dispatch(getArticleFailure());\n    dispatch(setError({ err }));\n  }\n};\n\nexport const deleteArticleAction = slug => async dispatch => {\n  dispatch(getArticleRequest());\n  try {\n    await service.deleteArticle(slug);\n    dispatch(deleteArticleSuccess());\n    message.success('Article Deleted!');\n    return true;\n  } catch (err) {\n    dispatch(getArticleFailure());\n    dispatch(setError({ err }));\n    return false;\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tag } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst ArticleTags = ({ tags }) => {\n  return (\n    <span>\n      {tags.map(tag => (\n        <Tag color=\"blue\" key={tag}>\n          <Link to={`/?tag=${tag}`}>{tag}</Link>\n        </Tag>\n      ))}\n    </span>\n  );\n};\n\nArticleTags.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.string),\n};\n\nArticleTags.defaultProps = {\n  tags: [],\n};\n\nexport default ArticleTags;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconText from '../../articles/components/IconText';\nimport '../styles/style.scss';\n\nconst ArticleLikes = ({ favoritesCount, handlerFavoriteArticle, isActive }) => {\n  return (\n    <span className={isActive ? 'article--likes__active' : 'article--likes'}>\n      <IconText\n        type=\"like-o\"\n        text={favoritesCount}\n        key=\"list-vertical-like-o\"\n        handler={handlerFavoriteArticle}\n      />\n    </span>\n  );\n};\n\nArticleLikes.propTypes = {\n  favoritesCount: PropTypes.number,\n  handlerFavoriteArticle: PropTypes.func.isRequired,\n  isActive: PropTypes.bool,\n};\n\nArticleLikes.defaultProps = {\n  favoritesCount: 0,\n  isActive: false,\n};\n\nexport default ArticleLikes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNow } from 'date-fns';\nimport IconText from '../../articles/components/IconText';\n\nconst ArticleDates = ({ createdAt, updatedAt }) => {\n  return (\n    <>\n      <div>\n        {' '}\n        <IconText\n          type=\"calendar\"\n          text={`Created ${formatDistanceToNow(new Date(createdAt), {\n            addSuffix: true,\n          })}\n            `}\n        />\n      </div>\n      <div>\n        {' '}\n        <IconText\n          type=\"calendar\"\n          text={`Updated ${formatDistanceToNow(new Date(updatedAt), {\n            addSuffix: true,\n          })}\n              `}\n        />\n      </div>\n    </>\n  );\n};\n\nArticleDates.propTypes = {\n  createdAt: PropTypes.string,\n  updatedAt: PropTypes.string,\n};\n\nArticleDates.defaultProps = {\n  createdAt: '',\n  updatedAt: '',\n};\n\nexport default ArticleDates;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Avatar, List } from 'antd';\nimport PropTypes from 'prop-types';\nimport { articleProps } from '../../propTypes';\nimport IconText from './IconText';\nimport { favoriteArticleAction } from '../../article/actions';\nimport ArticleTags from '../../article/components/ArticleTags';\nimport ArticleLikes from '../../article/components/ArticleLikes';\nimport ArticleDates from '../../article/components/ArticleDates';\nimport SpinnerWrapper from '../../spinner/SpinnerWrapper';\n\nconst ArticlesListItem = ({ article, favoriteArticle }) => {\n  return (\n    <SpinnerWrapper isActive={article.isLoading}>\n      <List.Item\n        key={article.slug}\n        actions={[\n          <ArticleLikes\n            handlerFavoriteArticle={() => favoriteArticle(article.slug, article.favorited)}\n            favoritesCount={article.favoritesCount}\n            isActive={article.favorited}\n          />,\n          <ArticleTags tags={article.tagList} />,\n        ]}\n        extra={<ArticleDates createdAt={article.createdAt} updatedAt={article.createdAt} />}\n      >\n        <List.Item.Meta\n          avatar={\n            <div className=\"articles-item--avatar\">\n              <div>\n                <Avatar src={article.author.image} />\n              </div>\n              <div className=\"articles-item--username\">\n                <span>\n                  <IconText type=\"star\" />\n                </span>\n                <Link to={`/profile/${article.author.username}`}>{article.author.username}</Link>\n              </div>\n            </div>\n          }\n          title={<Link to={`/articles/${article.slug}`}>{article.title}</Link>}\n          description={article.description}\n        />\n      </List.Item>\n    </SpinnerWrapper>\n  );\n};\n\nArticlesListItem.propTypes = {\n  article: articleProps.isRequired,\n  favoriteArticle: PropTypes.func.isRequired,\n};\n\nconst dispatchProps = {\n  favoriteArticle: favoriteArticleAction,\n};\n\nexport default connect(null, dispatchProps)(ArticlesListItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { List } from 'antd';\nimport { getArticlesAction } from '../actions';\nimport ArticlesListItem from './ArticlesListItem';\nimport { articleProps } from '../../propTypes';\nimport SpinnerWrapper from '../../spinner/SpinnerWrapper';\n\nconst POSTS_PER_PAGE = 10;\n\nclass ArticlesList extends React.Component {\n  componentDidMount = () => {\n    this.getData(1);\n  };\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    if (prevProps.location !== location) {\n      this.getData(1);\n    }\n  }\n\n  getData = pageNumber => {\n    const { getArticles, queryParams } = this.props;\n    queryParams.limit = POSTS_PER_PAGE;\n    queryParams.offset = (pageNumber - 1) * POSTS_PER_PAGE;\n    getArticles(queryParams);\n  };\n\n  render() {\n    const { articles } = this.props;\n    return (\n      <SpinnerWrapper isActive={articles.isLoading}>\n        <List\n          itemLayout=\"vertical\"\n          size=\"large\"\n          pagination={{\n            onChange: page => {\n              this.getData(page);\n            },\n            pageSize: 10,\n            total: articles.articlesCount,\n          }}\n          dataSource={Object.keys(articles.all)}\n          header={\n            <div>\n              <h2>All Articles</h2>\n            </div>\n          }\n          renderItem={item => <ArticlesListItem article={articles.all[item]} />}\n        />\n      </SpinnerWrapper>\n    );\n  }\n}\n\nArticlesList.propTypes = {\n  articles: PropTypes.shape({\n    all: PropTypes.objectOf(articleProps),\n    isLoading: PropTypes.bool,\n    articlesCount: PropTypes.number,\n  }),\n  getArticles: PropTypes.func.isRequired,\n  queryParams: PropTypes.shape({\n    tag: PropTypes.string,\n    author: PropTypes.string,\n    favorited: PropTypes.string,\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n  }),\n  location: PropTypes.shape({\n    key: PropTypes.string,\n    pathname: PropTypes.string,\n    search: PropTypes.string,\n    hash: PropTypes.string,\n    state: PropTypes.shape(PropTypes.bool),\n  }).isRequired,\n};\n\nArticlesList.defaultProps = {\n  articles: {\n    all: {},\n    isLoading: false,\n    articlesCount: 0,\n  },\n  queryParams: {},\n};\n\nconst mapStateToProps = ({ articles }) => ({\n  articles,\n});\n\nconst dispatchProps = {\n  getArticles: getArticlesAction,\n};\n\nexport default connect(mapStateToProps, dispatchProps)(ArticlesList);\n","import React from 'react';\nimport { Route, useLocation } from 'react-router-dom';\nimport ArticlesList from '../articles/components/ArticlesList';\nimport '../articles/styles/index.scss';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst ArticlesPage = () => {\n  const query = useQuery();\n  return (\n    <Route\n      path=\"/\"\n      exact\n      render={({ location }) => (\n        <ArticlesList\n          queryParams={{\n            tag: query.get('tag'),\n            author: query.get('author'),\n            favorited: query.get('favorited'),\n            limit: query.get('limit'),\n            offset: query.get('offset'),\n          }}\n          location={location}\n        />\n      )}\n    />\n  );\n};\n\nexport default ArticlesPage;\n","import React from 'react';\nimport { Avatar, Button, Col, Row } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\nimport { articleProps } from '../../propTypes';\nimport ArticleDates from './ArticleDates';\nimport ArticleLikes from './ArticleLikes';\nimport ArticleTags from './ArticleTags';\nimport { favoriteArticleAction, deleteArticleAction } from '../actions';\nimport '../styles/style.scss';\n\nconst ArticleFooter = ({ article, favoriteArticle, deleteArticle, username }) => {\n  const history = useHistory();\n  const deleteArticleHandler = () => {\n    deleteArticle(article.slug).then(() => history.push(`/?author=${username}`));\n  };\n\n  return (\n    <Row gutter={[0, 8]}>\n      <Col span={2}>\n        <Avatar src={article.author.image} shape=\"square\" size={64} />\n      </Col>\n      <Col span={2}>\n        <Link to={`/profile/${article.author.username}`}>{article.author.username}</Link>\n      </Col>\n      <Col span={2} offset={5}>\n        <ArticleLikes\n          handlerFavoriteArticle={() => favoriteArticle(article.slug, article.favorited)}\n          favoritesCount={article.favoritesCount}\n          isActive={article.favorited}\n        />\n      </Col>\n      <Col span={4}>\n        <ArticleTags tags={article.tagList} />\n      </Col>\n      <Col span={5}>\n        <ArticleDates createdAt={article.createdAt} updatedAt={article.updatedAt} />\n      </Col>\n      {article.author.username === username && (\n        <Col span={4}>\n          <Link to={`/articles/${article.slug}/edit`}>\n            <Button type=\"primary\">Edit</Button>\n          </Link>\n          <Button type=\"danger\" onClick={deleteArticleHandler}>\n            Delete\n          </Button>\n        </Col>\n      )}\n    </Row>\n  );\n};\n\nArticleFooter.propTypes = {\n  article: articleProps,\n  username: PropTypes.string,\n  favoriteArticle: PropTypes.func.isRequired,\n  deleteArticle: PropTypes.func.isRequired,\n};\n\nArticleFooter.defaultProps = {\n  article: {},\n  username: '',\n};\n\nconst mapStateToProps = ({ currentArticle: { data }, user: { username } }) => ({\n  article: data,\n  username,\n});\n\nconst dispatchProps = {\n  favoriteArticle: favoriteArticleAction,\n  deleteArticle: deleteArticleAction,\n};\n\nexport default connect(mapStateToProps, dispatchProps)(ArticleFooter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Divider } from 'antd';\nimport { articleProps } from '../../propTypes';\nimport ArticleFooter from './ArticleFooter';\nimport '../styles/style.scss';\nimport { getArticleAction } from '../actions';\nimport SpinnerWrapper from '../../spinner/SpinnerWrapper';\n\nclass Article extends React.Component {\n  componentDidMount = () => {\n    const { getArticle, match } = this.props;\n    getArticle(match.params.slug);\n  };\n\n  render() {\n    const { data, isLoading } = this.props;\n    return (\n      <SpinnerWrapper isActive={isLoading}>\n        <article className=\"article\">\n          <h3 className=\"article--title\">{data.title}</h3>\n          <p className=\"article--body\">{data.body}</p>\n          <Divider dashed />\n          <ArticleFooter article={data} />\n        </article>\n      </SpinnerWrapper>\n    );\n  }\n}\n\nArticle.propTypes = {\n  getArticle: PropTypes.func.isRequired,\n  data: articleProps,\n  isLoading: PropTypes.bool,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nArticle.defaultProps = {\n  data: {},\n  isLoading: false,\n};\n\nconst mapDispatchToProps = ({ currentArticle: { data, isLoading } }) => ({\n  data,\n  isLoading,\n});\n\nconst dispatchActions = {\n  getArticle: getArticleAction,\n};\n\nexport default connect(mapDispatchToProps, dispatchActions)(Article);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Article from '../article/components/Article';\n\nconst ArticlePage = () => {\n  return <Route path=\"/articles/:slug\" exact component={Article} />;\n};\n\nexport default ArticlePage;\n","import { createAction } from 'redux-actions';\nimport service from '../services';\nimport { setError } from '../errors/actions';\n\nexport const getProfileRequest = createAction('GET_PROFILE_REQUEST');\nexport const getProfileSuccess = createAction('GET_PROFILE_SUCCESS');\nexport const getProfileFailure = createAction('GET_PROFILE_FAILURE');\n\nexport const getProfileAction = username => async dispatch => {\n  dispatch(getProfileRequest());\n  try {\n    const profile = await service.getProfile(username);\n    dispatch(getProfileSuccess({ profile }));\n  } catch (err) {\n    dispatch(getProfileFailure());\n    dispatch(setError({ err }));\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Avatar, Descriptions } from 'antd';\nimport PropTypes from 'prop-types';\nimport { getProfileAction } from '../actions';\nimport { profileProps } from '../../propTypes';\nimport SpinnerWrapper from '../../spinner/SpinnerWrapper';\n\nclass Profile extends React.Component {\n  componentDidMount() {\n    const { match, getProfileHandler } = this.props;\n    getProfileHandler(match.params.username);\n  }\n\n  render() {\n    const { currentProfile } = this.props;\n    return (\n      <SpinnerWrapper isActive={currentProfile.isLoading}>\n        <Descriptions title=\"User Info\" bordered column={2}>\n          <Descriptions.Item label=\"Image\" span={2}>\n            <Avatar shape=\"square\" size={128} src={currentProfile.image} />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"UserName\" span={2}>\n            {currentProfile.username}\n          </Descriptions.Item>\n          {currentProfile.bio && (\n            <Descriptions.Item label=\"About me\" span={2}>\n              {currentProfile.bio}\n            </Descriptions.Item>\n          )}\n          <Descriptions.Item label=\"Follow\" span={2}>\n            Follow Icon To Do\n          </Descriptions.Item>\n        </Descriptions>\n      </SpinnerWrapper>\n    );\n  }\n}\n\nProfile.propTypes = {\n  getProfileHandler: PropTypes.func.isRequired,\n  currentProfile: profileProps.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      username: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nconst mapStateToProps = ({ currentProfile }) => ({\n  currentProfile,\n});\n\nconst dispatchProps = {\n  getProfileHandler: getProfileAction,\n};\n\nexport default connect(mapStateToProps, dispatchProps)(Profile);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Profile from '../profile/components/Profile';\n\nconst ProfilePage = () => <Route path=\"/profile/:username\" component={Profile} />;\n\nexport default ProfilePage;\n","import React from 'react';\nimport { Form, Field, FieldArray } from 'formik';\nimport { Button, Form as AntForm, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport { AntInput, AntTextArea } from './CreateAntField';\n\nconst DisplayAddArticleForm = ({ data: { submitCount, isSubmitting, values } }) => {\n  return (\n    <Form className=\"form\">\n      <Field\n        name=\"title\"\n        type=\"text\"\n        label=\"Title\"\n        component={AntInput}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <Field\n        name=\"description\"\n        type=\"text\"\n        label=\"Description\"\n        component={AntInput}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <Field\n        name=\"body\"\n        type=\"textarea\"\n        label=\"Body\"\n        component={AntTextArea}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <AntForm.Item>\n        <FieldArray\n          name=\"tagList\"\n          render={arrayHelpers => (\n            <div>\n              {values.tagList &&\n                values.tagList.length > 0 &&\n                values.tagList.map((tag, index) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <AntForm.Item key={index}>\n                    <Field\n                      name={`tagList.${index}`}\n                      // component={AntInput}\n                      label=\"Tag Name\"\n                    />\n                    <Icon\n                      className=\"dynamic-delete-button\"\n                      type=\"minus-circle-o\"\n                      onClick={() => arrayHelpers.remove(index)}\n                    />\n                  </AntForm.Item>\n                ))}\n              <AntForm.Item>\n                <Button type=\"dashed\" onClick={() => arrayHelpers.push('')}>\n                  <Icon type=\"plus\" /> Add tag\n                </Button>\n              </AntForm.Item>\n            </div>\n          )}\n        />\n      </AntForm.Item>\n      <AntForm.Item>\n        <Button type=\"primary\" htmlType=\"submit\" loading={isSubmitting}>\n          Save\n        </Button>\n      </AntForm.Item>\n    </Form>\n  );\n};\n\nDisplayAddArticleForm.propTypes = {\n  data: PropTypes.shape({\n    submitCount: PropTypes.number,\n    isSubmitting: PropTypes.bool,\n    values: PropTypes.shape({\n      tagList: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n};\n\nDisplayAddArticleForm.defaultProps = {\n  data: {\n    submitCount: 0,\n    isSubmitting: false,\n  },\n};\n\nexport default DisplayAddArticleForm;\n","import React from 'react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { withRouter } from 'react-router';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { message } from 'antd';\nimport DisplayAddArticleForm from './DisplayAddArticleForm';\nimport { articleSchema } from '../../schemas/schemas';\nimport SpinnerWrapper from '../../spinner/SpinnerWrapper';\nimport { addArticleAction } from '../../article/actions';\n\nconst initialValues = {\n  title: '',\n  description: '',\n  body: '',\n  tagList: [],\n};\n\n// eslint-disable-next-line react/prop-types\nconst AddArticleForm = ({ addArticleHandler, showSpinner, history }) => {\n  return (\n    <SpinnerWrapper isActive={showSpinner}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={articleSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          addArticleHandler(values).then(article => {\n            message.success('New Article added!');\n            // eslint-disable-next-line react/prop-types\n            history.push(`articles/${article.slug}`);\n            setSubmitting(false);\n          });\n        }}\n      >\n        {data => <DisplayAddArticleForm data={data} />}\n      </Formik>\n    </SpinnerWrapper>\n  );\n};\n\nAddArticleForm.propTypes = {\n  addArticleHandler: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool,\n};\n\nAddArticleForm.defaultProps = {\n  showSpinner: false,\n};\n\nconst mapStateToProps = ({ currentArticle: { isLoading } }) => ({\n  showSpinner: isLoading,\n});\n\nconst mapDispatch = {\n  addArticleHandler: addArticleAction,\n};\n\nexport default connect(mapStateToProps, mapDispatch)(withRouter(AddArticleForm));\n","import React from 'react';\nimport AddArticleForm from '../../forms/components/AddArticleForm';\n\nconst AddArticle = () => {\n  return (\n    <div>\n      <h1>New Article</h1>\n      <AddArticleForm />\n    </div>\n  );\n};\n\nexport default AddArticle;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ children, isLogged, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isLogged ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  children: PropTypes.element.isRequired,\n  isLogged: PropTypes.bool,\n};\n\nPrivateRoute.defaultProps = {\n  isLogged: false,\n};\n\nconst mapStateToProps = ({ user: { isLogged } }) => ({\n  isLogged,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport AddArticle from '../article/components/AddArticle';\nimport PrivateRoute from './PrivateRoute';\n\nconst AddArticlePage = () => (\n  <PrivateRoute path=\"/add\">\n    <AddArticle />\n  </PrivateRoute>\n);\n\nexport default AddArticlePage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { message } from 'antd';\nimport DisplayAddArticleForm from './DisplayAddArticleForm';\nimport { articleSchema } from '../../schemas/schemas';\nimport { editArticleAction } from '../../article/actions';\nimport { articleProps } from '../../propTypes';\n\nconst EditArticleForm = ({ editArticleHandler, article }) => {\n  const history = useHistory();\n  const initialValues = {\n    title: article.title,\n    description: article.description,\n    body: article.body,\n    tagList: article.tagList,\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={articleSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        editArticleHandler({ ...values, slug: article.slug }).then(editedArticle => {\n          message.success('Success!');\n          history.push(`/articles/${editedArticle.slug}`);\n          setSubmitting(false);\n        });\n      }}\n    >\n      {data => <DisplayAddArticleForm data={data} />}\n    </Formik>\n  );\n};\n\nEditArticleForm.propTypes = {\n  editArticleHandler: PropTypes.func.isRequired,\n  article: articleProps.isRequired,\n};\n\nconst mapDispatch = {\n  editArticleHandler: editArticleAction,\n};\n\nexport default connect(null, mapDispatch)(EditArticleForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport EditArticleForm from '../../forms/components/EditArticleForm';\nimport { articleProps } from '../../propTypes';\nimport { getArticleAction } from '../actions';\nimport SpinnerWrapper from '../../spinner/SpinnerWrapper';\n\nclass EditArticle extends React.Component {\n  componentDidMount() {\n    const { getArticle, match } = this.props;\n    getArticle(match.params.slug);\n  }\n\n  render() {\n    const { data, isLoading } = this.props;\n    return (\n      <div>\n        <h1>Edit Article</h1>\n        <SpinnerWrapper isActive={isLoading}>\n          <EditArticleForm article={data} />\n        </SpinnerWrapper>\n      </div>\n    );\n  }\n}\n\nEditArticle.propTypes = {\n  getArticle: PropTypes.func.isRequired,\n  data: articleProps,\n  isLoading: PropTypes.bool,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nEditArticle.defaultProps = {\n  data: {},\n  isLoading: false,\n};\n\nconst mapDispatchToProps = ({ currentArticle: { data, isLoading } }) => ({\n  data,\n  isLoading,\n});\n\nconst dispatchActions = {\n  getArticle: getArticleAction,\n};\n\nexport default connect(mapDispatchToProps, dispatchActions)(withRouter(EditArticle));\n","import React from 'react';\nimport EditArticle from '../article/components/EditArticle';\nimport PrivateRoute from './PrivateRoute';\n\nconst EditArticlePage = () => (\n  <PrivateRoute path=\"/articles/:slug/edit\" exact>\n    <EditArticle />\n  </PrivateRoute>\n);\n\nexport default EditArticlePage;\n","import { handleActions } from 'redux-actions';\n\nconst initState = {\n  all: {\n    'test-article': {\n      title: 'Article Title',\n      slug: 'test-article',\n      body:\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi' +\n        ' ista probare, quae sunt a te dicta? Refert tamen, quo modo. Lorem ipsum dolor sit amet,' +\n        ' consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt' +\n        ' a te dicta? Refert tamen, quo modo. Lorem ipsum dolor sit amet, consectetur adipiscing' +\n        ' elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen,' +\n        ' quo modo.',\n      createdAt: '2019-11-26T18:31:33.645Z',\n      updatedAt: '2019-11-26T18:31:33.645Z',\n      tagList: ['tag1', 'tag2', 'tag3'],\n      description: 'Article Description',\n      favorited: false,\n      favoritesCount: 0,\n      author: {\n        username: 'Vovka',\n        bio: null,\n        image: 'https://static.productionready.io/images/smiley-cyrus.jpg',\n        following: false,\n      },\n      isLoading: false,\n    },\n  },\n  articlesCount: 1,\n  isLoading: false,\n};\n\nconst articles = handleActions(\n  {\n    GET_ARTICLES_REQUEST: state => {\n      return { ...state, isLoading: true };\n    },\n    GET_ARTICLES_SUCCESS: (state, { payload: { articlesData } }) => {\n      const articlesObject = articlesData.articles.reduce((acc, article) => {\n        return { ...acc, [article.slug]: { ...article, isLoading: false } };\n      }, {});\n      return { all: articlesObject, isLoading: false, articlesCount: articlesData.articlesCount };\n    },\n    GET_ARTICLES_FAILURE: state => {\n      return { ...state, isLoading: false };\n    },\n    FAVORITE_ARTICLE_SUCCESS: (state, { payload: { article } }) => {\n      return {\n        ...state,\n        isLoading: false,\n        all: { ...state.all, [article.slug]: { ...article, isLoading: false } },\n      };\n    },\n  },\n  initState\n);\n\nexport default articles;\n","import { handleActions } from 'redux-actions';\n\nconst initState = {\n  email: '',\n  token: null,\n  username: '',\n  bio: '',\n  image: null,\n  isLoading: false,\n  isLogged: false,\n};\n\nconst userReducer = handleActions(\n  {\n    USER_LOGIN_REQUEST: state => {\n      return { ...state, isLogged: false, isLoading: true };\n    },\n    USER_LOGIN_SUCCESS: (state, { payload }) => {\n      return { ...payload.user, isLogged: true, isLoading: false };\n    },\n    USER_LOGIN_FAILURE: state => {\n      return { ...state, isLogged: false, isLoading: false };\n    },\n    USER_REGISTER_REQUEST: state => {\n      return { ...state, isLogged: false, isLoading: true };\n    },\n    USER_REGISTER_SUCCESS: (state, { payload }) => ({\n      user: payload.newUser,\n      isLogged: true,\n      isLoading: false,\n    }),\n    USER_REGISTER_FAILURE: state => ({\n      ...state,\n      isLogged: false,\n      isLoading: false,\n    }),\n    USER_LOGOUT: () => initState,\n  },\n  initState\n);\n\nexport default userReducer;\n","import { handleActions } from 'redux-actions';\n\nconst initState = {\n  data: {\n    slug: '',\n    title: '',\n    description: '',\n    body: '',\n    tagList: [],\n    createdAt: '2016-02-18T03:22:56.637Z',\n    updatedAt: '2016-02-18T03:22:56.637Z',\n    favorited: false,\n    favoritesCount: 0,\n    author: {\n      username: '',\n      bio: '',\n      image: 'https://static.productionready.io/images/smiley-cyrus.jpg',\n      following: false,\n    },\n  },\n  isLoading: false,\n};\n\nconst currentArticle = handleActions(\n  {\n    GET_ARTICLE_REQUEST: state => {\n      return { ...state, isLoading: true };\n    },\n    GET_ARTICLE_SUCCESS: (state, { payload }) => {\n      return { isLoading: false, data: payload.article };\n    },\n    GET_ARTICLE_FAILURE: state => {\n      return { ...state, isLoading: false };\n    },\n    DELETE_ARTICLE_SUCCESS: () => initState,\n  },\n  initState\n);\n\nexport default currentArticle;\n","import { handleActions } from 'redux-actions';\n\nconst initState = null;\n\nconst error = handleActions(\n  {\n    CLEAR_ERROR: () => {\n      return initState;\n    },\n    SET_ERROR: (state, { payload: { err } }) => {\n      const { data, status } = err.response;\n      return { data, status };\n    },\n  },\n  initState\n);\nexport default error;\n","import { handleActions } from 'redux-actions';\n\nconst initState = {\n  username: '',\n  bio: '',\n  image: 'https://static.productionready.io/images/smiley-cyrus.jpg',\n  following: false,\n  isLoading: false,\n};\n\nconst currentProfile = handleActions(\n  {\n    GET_PROFILE_REQUEST: state => {\n      return { ...state, isLoading: true };\n    },\n    GET_PROFILE_SUCCESS: (state, { payload }) => {\n      return { ...payload.profile, isLoading: false };\n    },\n    GET_PROFILE_FAILURE: state => {\n      return { ...state, isLoading: false };\n    },\n  },\n  initState\n);\n\nexport default currentProfile;\n","import { combineReducers } from 'redux';\nimport articles from './articles/reducer';\nimport user from './forms/userReducer';\nimport currentArticle from './article/reducer';\nimport error from './errors/reducer';\nimport currentProfile from './profile/reducer';\n\nexport default combineReducers({ articles, user, currentArticle, error, currentProfile });\n","import React from 'react';\nimport { Menu } from 'antd';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { onLogout } from '../forms/actions';\n\nconst MainMenu = ({ isLogged, username, handleLogout }) =>\n  isLogged ? (\n    <Menu className=\"menu\" theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n      <Menu.Item key=\"1\">\n        <Link to={`/profile/${username}`}>My Profile</Link>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <Link to=\"/add\">Add Article</Link>\n      </Menu.Item>\n      <Menu.Item key=\"3\">\n        <Link to={`/?author=${username}`}>My Articles</Link>\n      </Menu.Item>\n      <Menu.Item key=\"4\">\n        <Link to=\"/\" onClick={handleLogout}>\n          Logout\n        </Link>\n      </Menu.Item>\n    </Menu>\n  ) : (\n    <Menu className=\"menu\" theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n      <Menu.Item key=\"1\">\n        <Link to=\"/login\">Login</Link>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <Link to=\"/register\">Register</Link>\n      </Menu.Item>\n    </Menu>\n  );\n\nMainMenu.propTypes = {\n  username: PropTypes.string,\n  isLogged: PropTypes.bool,\n  handleLogout: PropTypes.func.isRequired,\n};\n\nMainMenu.defaultProps = {\n  username: '',\n  isLogged: false,\n};\n\nconst mapStateToProps = ({ user }) => ({\n  isLogged: user.isLogged,\n  username: user.username,\n});\n\nconst mapDispatch = {\n  handleLogout: onLogout,\n};\n\nexport default connect(mapStateToProps, mapDispatch)(MainMenu);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Layout } from 'antd';\nimport MainMenu from './MainMenu';\n\nconst { Header } = Layout;\n\nconst AppHeader = () => {\n  return (\n    <Header>\n      <h1 className=\"logo\">\n        <Link to=\"/\">Blog</Link>\n      </h1>\n      <MainMenu />\n    </Header>\n  );\n};\n\nexport default AppHeader;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nconst { Footer } = Layout;\n\nconst AppFooter = () => {\n  return (\n    <Footer style={{ textAlign: 'center' }}>Java Mentor Blog Platform ©2019 Vladimir Mytnik</Footer>\n  );\n};\n\nexport default AppFooter;\n","import React from 'react';\n\nconst statusesMap = {\n  401: () => ({\n    title: 'Unauthorized Error',\n    content: 'Please, login first to do this action.',\n  }),\n  403: () => ({\n    title: 'Forbidden Error',\n    content: \"You doesn't have permissions to perform this action\",\n  }),\n  404: () => ({\n    title: 'Not Found Error',\n    content: 'Not found. We are cant fulfill your request',\n  }),\n  422: ({ errors }) => {\n    const content = (\n      <>\n        {Object.keys(errors).map(key => (\n          <p key={key}>{` - ${key} ${errors[key][0]}`}</p>\n        ))}\n      </>\n    );\n    return {\n      title: 'Request Error',\n      content,\n    };\n  },\n};\n\nexport default ({ data, status }) => statusesMap[status](data);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'antd';\nimport { connect } from 'react-redux';\nimport getErrorMessage from './getErrorMessage';\nimport { clearError } from './actions';\nimport { getUser } from '../forms/actions';\n\nclass ServerError extends React.Component {\n  componentDidMount() {\n    const { authUser, token } = this.props;\n    authUser(token);\n  }\n\n  render() {\n    const { children, error, hideModal } = this.props;\n    if (error) {\n      const errorMessage = getErrorMessage(error);\n      return (\n        <>\n          <Modal\n            title={errorMessage.title}\n            visible={!!error}\n            onCancel={hideModal}\n            footer={[\n              <Button key=\"submit\" type=\"primary\" onClick={hideModal}>\n                Close\n              </Button>,\n            ]}\n          >\n            <div>{errorMessage.content}</div>\n          </Modal>\n          {children}\n        </>\n      );\n    }\n    return <>{children}</>;\n  }\n}\n\nServerError.propTypes = {\n  children: PropTypes.element,\n  error: PropTypes.shape({\n    data: PropTypes.oneOfType([\n      PropTypes.shape({\n        errors: PropTypes.oneOfType([\n          PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)),\n          PropTypes.string,\n        ]),\n      }),\n      PropTypes.string,\n    ]),\n    status: PropTypes.number,\n  }),\n  hideModal: PropTypes.func.isRequired,\n  token: PropTypes.string,\n  authUser: PropTypes.func.isRequired,\n};\n\nServerError.defaultProps = {\n  children: <div className=\"error\" />,\n  error: null,\n  token: null,\n};\n\nconst mapStateToProps = ({ error, user: { token } }) => ({\n  error,\n  token,\n});\n\nconst dispatchProps = {\n  hideModal: clearError,\n  authUser: getUser,\n};\n\nexport default connect(mapStateToProps, dispatchProps)(ServerError);\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Layout } from 'antd';\nimport {\n  RegisterPage,\n  LoginPage,\n  ArticlesPage,\n  ArticlePage,\n  ProfilePage,\n  AddArticlePage,\n  EditArticlePage,\n} from './pages';\nimport reducer from './reducers';\nimport AppHeader from './blocks/AppHeader';\nimport AppFooter from './blocks/AppFooter';\nimport ServerError from './errors/ServerError';\n\nconst { Content } = Layout;\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <ServerError>\n          <Layout>\n            <AppHeader />\n            <Content className=\"main\">\n              <ArticlesPage />\n              <AddArticlePage />\n              <EditArticlePage />\n              <ProfilePage />\n              <ArticlePage />\n              <LoginPage />\n              <RegisterPage />\n            </Content>\n            <AppFooter className=\"footer\" />\n          </Layout>\n        </ServerError>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App className=\"App\" />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}